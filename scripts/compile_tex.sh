#!/bin/bash

# compile_tex.sh - Properly compiles .tex files
#
# This script is used to compile .tex files to .pdf files using the lualatex compiler.
# It includes all the neccessary commands to also automatically do the bibtex and nomcl compilation.
# This compiles the file tex/PROJECT/main.tex to a pdf and saves it as tex/PROJECT/output/PROJECT.pdf
# In order for it to find the correct directories, it has to be run directly from the src/scripts/ directory.
# It also automatically cleans up other files generated by the compiler, other than the PROJECT.pdf file.
#
# Usage:
# ./compile_tex.sh [OPTIONS] [PROJECT]
#
#
# Available options:
#     -k, --keep-all        Forces the script to not clean up after itself, leaving files for debugging purposes
#     -v, --verbose         Prints more information about the current state of compiling.
#     -h, --help            Show brief help
#

KEEP_ALL=false
PRINT_VERBOSE=false

while test $# -gt 1; do
    case "$1" in
        -h|--help)
            echo "compile_tex.sh - Properly compiles .tex files"
            echo ""
            echo "This script is used to compile .tex files to .pdf files using the lualatex compiler."
            echo "It includes all the neccessary commands to also automatically do the bibtex and nomcl compilation."
            echo "This compiles the file tex/PROJECT/main.tex to a pdf and saves it as tex/PROJECT/output/PROJECT.pdf"
            echo "In order for it to find the correct directories, it has to be run directly from the src/scripts/ directory."
            echo "It also automatically cleans up other files generated by the compiler, other than the PROJECT.pdf file."
            echo ""
            echo "Usage:"
            echo "./compile_tex.sh [OPTIONS] [PROJECT]"
            echo ""
            echo ""
            echo "Available options:"
            echo "    -k, --keep-all        Forces the script to not clean up after itself, leaving files for debugging purposes"
            echo "    -v, --verbose         Prints more information about the current state of compiling."
            echo "    -h, --help            Show brief help"

            exit 0
            ;;
        -k|--keep-all)
            KEEP_ALL=true
            shift
            ;;
        -v|--verbose)
            PRINT_VERBOSE=true
            shift
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -gt 0 ]; then
    DIRECTORY_PATH="../${*: -1}/"
    MAIN_PATH=$DIRECTORY_PATH
    MAIN_PATH+="main.tex"
else
    echo "Error: No project name has been given. Aborting."
    exit 1
fi

if [ ! -d "$DIRECTORY_PATH" ]; then
    echo "Error: The directory $DIRECTORY_PATH does not exist. Aborting."
    exit 2
fi

if [ ! -f "$MAIN_PATH" ]; then
    echo "Error: The file $MAIN_PATH does not exist. Aborting."
    exit 3
fi

mkdir -p "${DIRECTORY_PATH}"/output/
cd "${DIRECTORY_PATH}" || exit

if [ ${PRINT_VERBOSE} = true ]; then
    echo "Doing first lualatex compilation."
    lualatex -shell-escape --output-directory=output/ main.tex
    echo "Doing bibtex compilation."
    cd output/ || exit
    cp ../*.bib .
    bibtex main.aux
    if [ -f main.nlo ]; then
        echo "Doing nomcl compilation."
        makeindex main.nlo -s nomencl.ist -o main.nls
    fi
    cd .. || exit
    echo "Doing second lualatex compilation."
    lualatex -shell-escape --output-directory=output/ main.tex
    lualatex -shell-escape --output-directory=output/ main.tex
else
    echo "Compiling..."
    lualatex -shell-escape --output-directory=output/ main.tex > /dev/null
    cd output/ || exit
    cp ../*.bib .
    bibtex main.aux > /dev/null
    if [ -f main.nlo ]; then
        makeindex main.nlo -s nomencl.ist -o main.nls > /dev/null
    fi
    cd .. || exit
    lualatex -shell-escape --output-directory=output/ main.tex > /dev/null
    lualatex -shell-escape --output-directory=output/ main.tex > /dev/null
fi

echo "Done!"

cd output || exit
mv main.pdf "${*: -1}".pdf

if [ ${KEEP_ALL} = false ]; then
    echo "Cleaning up..."
    rm main.* ./*.bib
    rm ./*.aux
fi
